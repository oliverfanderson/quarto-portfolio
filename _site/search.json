[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello there, I’m Oliver!",
    "section": "",
    "text": "I’m Oliver F. Anderson, a Data Scientist and Health and Fitness Nerd. Get to know me better.\nTake a look around and check out some of the projects that I have been working on."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Oliver F. Anderson",
    "section": "",
    "text": "Oliver Faulkner Anderson is a data scientist currently pursuing his Master’s of Data Science at Willamette University. As a big sports science and nutrition nerd, he found an outlet for these passions while competing in Track & Field as a jumper and sprinter at Willamette University.\nHe presented his thesis at the Murdock College Science Research Conference where he developed a pipeline for cleaning and processing data gathered by RNA sequencing. This work was published in the International Journal of Molecular Sciences in collaboration with Reed College. If you would like to find out more about this project, you can check it out along with his other projects here.\n\nEducation\n\nWillamette University | Salem, OR\nMS in Data Science | Sept 2022 - August 2023\n\n\nWillamette University | Salem, OR\nBA in Biology | Sept 2016 - May 2022\n\n\n\nExperience\n\nWillamette University | Salem, OR\nChemistry Tutor | Sept 2021 - Dec 2021Research Assistant | May 2021 - August 2021\n\n\nSimple Solutions Landcare LLC | Salem, OR\nCo-Owner & Landscaper | Dec 2017 - July 2019"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "How Sunny is Your Hometown?\n\n\n\n\n\n\n\nhealth\n\n\nanalysis\n\n\ncode\n\n\ndata wrangling\n\n\nR\n\n\ndata visualization\n\n\n\n\nPlaying with interactive data visualization in R using ggiraph and plotly.\n\n\n\n\n\n\nFeb 16, 2023\n\n\n\n\n\n\n\n\nSuper Bowl Winners: Creating a Beautiful Table in R\n\n\n\n\n\n\n\nsports\n\n\nanalysis\n\n\ncode\n\n\ndata wrangling\n\n\nR\n\n\ndata visualization\n\n\n\n\nAn exploration of the gt package in R. Data from kaggle.com.\n\n\n\n\n\n\nFeb 13, 2023\n\n\n\n\n\n\n\n\nBody Composition of Track & Field Events\n\n\n\n\n\n\n\nhealth & fitness\n\n\nanalysis\n\n\ncode\n\n\ndata wrangling\n\n\nR\n\n\ndata visualization\n\n\n\n\nVisualization of the body composition of the athletes in different track and field events. Data from #TidyTuesday.\n\n\n\n\n\n\nFeb 5, 2023\n\n\n\n\n\n\n\n\nConstruction of Database from Daily Currency Rates\n\n\n\n\n\n\n\nanalysis\n\n\ncode\n\n\ndata wrangling\n\n\nbash\n\n\ndocker\n\n\nSQL\n\n\nR\n\n\nweb-scraping\n\n\ndata engineering\n\n\ndatabases\n\n\n\n\nCreation of a relational database in SQL of global currency rates relative to USD. Data scraped from a currency rate API.\n\n\n\n\n\n\nNov 25, 2022\n\n\n\n\n\n\n\n\nInteractive Map Made with Shiny and Leaflet in R\n\n\n\n\n\n\n\nhealth & fitness\n\n\nanalysis\n\n\ncode\n\n\ndata wrangling\n\n\nR\n\n\ndata visualization\n\n\nshiny (R package)\n\n\nLeaflet (R package)\n\n\n\n\nAn interactive map of CDC data on nutrition, exercise, and obesity in the United States. Created in partnership with Hayden Vaughn. Check out the full version here.\n\n\n\n\n\n\nNov 23, 2022\n\n\n\n\n\n\n\n\nDevelopment of a Pipeline for Wrangling RNA Seq Data\n\n\n\n\n\n\n\nbiology\n\n\nanalysis\n\n\ncode\n\n\nbioinformatics\n\n\ndata wrangling\n\n\nbash\n\n\n\n\nDevelopment of a software pipeline for cleaning and processing data from RNA sequencing.\n\n\n\n\n\n\nMay 17, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/penguins.html",
    "href": "posts/penguins.html",
    "title": "Development of a Pipeline for Wrangling RNA Seq Data",
    "section": "",
    "text": "This is where I put the text for my first post. I can add code like this.\nI can insert an image like this\n\n\n\nThis is where I put the text for my first post. `I can add code like this`.\n\nI can insert an image like this<br><img src=“/images/loki.png” alt=“My doggo”>"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact Me",
    "section": "",
    "text": "."
  },
  {
    "objectID": "index.html#photo-by-xue-guangjian",
    "href": "index.html#photo-by-xue-guangjian",
    "title": "Hello there, I’m Oliver!",
    "section": "Photo by Xue Guangjian",
    "text": "Photo by Xue Guangjian"
  },
  {
    "objectID": "contact.html#note-add-a-good-background-photo-maybe",
    "href": "contact.html#note-add-a-good-background-photo-maybe",
    "title": "Contact Me",
    "section": "NOTE: ADD A GOOD BACKGROUND PHOTO MAYBE",
    "text": "NOTE: ADD A GOOD BACKGROUND PHOTO MAYBE"
  },
  {
    "objectID": "about_me.html",
    "href": "about_me.html",
    "title": "Oliver F. Anderson",
    "section": "",
    "text": "Oliver Faulkner Anderson is a data scientist currently pursuing his Master’s of Data Science at Willamette University. As a big sports science and nutrition nerd, he found an outlet for these passions while competing in Track & Field as a jumper and sprinter at Willamette University.\nHe presented his thesis at the Murdock College Science Research Conference where he developed a pipeline for cleaning and processing data gathered by RNA sequencing. This work was published in the International Journal of Molecular Sciences in collaboration with Reed College. If you would like to find out more about this project, you can check it out along with his other projects here.\n\nEducation\n\nWillamette University | Salem, OR\nMS in Data Science | Sept 2022 - August 2023\n\nWillamette University | Salem, OR\nBA in Biology | Sept 2016 - May 2022\n\n\n\n\nExperience\n\nWillamette University | Salem, OR\nResearch Assistant | May 2021 - August 2021Chemistry Tutor | Sept 2021 - Dec 2021\n\n\nSimple Solutions Landcare LLC | Salem, OR\nCo-Owner & Landscaper | Dec 2017 - July 2019"
  },
  {
    "objectID": "about_me.html#education",
    "href": "about_me.html#education",
    "title": "Oliver F. Anderson",
    "section": "Education",
    "text": "Education\n\nWillamette University | Salem, OR\nMS in Data Science | Sept 2022 - August 2023\n\n\nWillamette University | Salem, OR\nBA in Biology | Sept 2016 - May 2022\n\n\nExperience\n\nWillamette University | Salem, OR\nResearch Assistant | May 2021 - August 2021Chemistry Tutor | Sept 2021 - Dec 2021\n\n\nSimple Solutions Landcare LLC | Salem, OR\nCo-Owner & Landscaper | Dec 2017 - July 2019"
  },
  {
    "objectID": "about_me.html#experience",
    "href": "about_me.html#experience",
    "title": "Oliver F. Anderson",
    "section": "Experience",
    "text": "Experience\n\nWillamette University | Salem, OR\nResearch Assistant | May 2021 - August 2021Chemistry Tutor | Sept 2021 - Dec 2021\n\n\nSimple Solutions Landcare LLC | Salem, OR\nCo-Owner & Landscaper | Dec 2017 - July 2019"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Testing Rendering Code",
    "section": "",
    "text": "#|echo: false does not print code required for output\ninclude=FALSE\nDoes not get added to the HTML output\nlibrary(patchwork)\n(ggplot1 + ggplot2) / (ggplot2)"
  },
  {
    "objectID": "contact.html#email-icons-png-designed-by-iyikon",
    "href": "contact.html#email-icons-png-designed-by-iyikon",
    "title": "Contact Me",
    "section": "email icons PNG Designed By IYIKON",
    "text": "email icons PNG Designed By IYIKON"
  },
  {
    "objectID": "contact.html#photo-by-tyler-lastovich",
    "href": "contact.html#photo-by-tyler-lastovich",
    "title": "Contact Me",
    "section": "Photo by Tyler Lastovich",
    "text": "Photo by Tyler Lastovich"
  },
  {
    "objectID": "contact.html#email-icons-png-designed-by-iyikonphoto-by-tyler-lastovich",
    "href": "contact.html#email-icons-png-designed-by-iyikonphoto-by-tyler-lastovich",
    "title": "Contact Me",
    "section": "email icons PNG Designed By IYIKONPhoto by Tyler Lastovich",
    "text": "email icons PNG Designed By IYIKONPhoto by Tyler Lastovich"
  },
  {
    "objectID": "contact.html#email-icons-png-designed-by-iyikon-photo-by-tyler-lastovich",
    "href": "contact.html#email-icons-png-designed-by-iyikon-photo-by-tyler-lastovich",
    "title": "Contact Me",
    "section": "email icons PNG Designed By IYIKONPhoto by Tyler Lastovich",
    "text": "email icons PNG Designed By IYIKONPhoto by Tyler Lastovich"
  },
  {
    "objectID": "posts/obesity-rates-shiny.html",
    "href": "posts/obesity-rates-shiny.html",
    "title": "Interactive Map Made with Shiny and Leaflet in R",
    "section": "",
    "text": "<p>Shiny App</p>"
  },
  {
    "objectID": "posts/olympics-tidytuesday.html",
    "href": "posts/olympics-tidytuesday.html",
    "title": "Body Composition of Track & Field Events",
    "section": "",
    "text": "As a track and field athlete and fanatic, I have noticed that specific events seems to attract specific body compositions. Thus, I was curious see if there was data supporting the idea that certain body compositions are more ideal for certain events. In this project, I will be using data from the Tidy Tuesday GitHub repository from July 27, 2021 on the Olympics to examine the body compositions of Olympic track and field medalists over the years.\n\n\nLook at the code\n# load packages and read in data from tidyTuesday\nlibrary(tidyverse)\nlibrary(colorspace)\nlibrary(patchwork)\nlibrary(DT)\nolympics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-07-27/olympics.csv')\n# head(olympics)\n\n# I am interested in looking at track and field (athletics) medalists\nathletics <- olympics %>% \n  filter(sport==\"Athletics\",\n         !is.na(medal))\n\nathletics$sex <- as.factor(athletics$sex)\n\nathletics_colnames <- c(\"ID\", \"Name\", \"Sex\", \"Age\", \"Height\",\n                        \"Weight\", \"Team\", \"NOC\", \"Games\", \"Year\",\n                        \"Season\", \"City\", \"Sport\", \"Event\",\n                        \"Medal\")\n\nDT::datatable(athletics, colnames = athletics_colnames, caption = htmltools::tags$caption(style = \"caption-side: bottom; text-align: center;\", htmltools::strong(\"Table 1: Olympic Track & Field Medalists\")), filter = \"top\", options = list(pageLength = 5, autoWidth = TRUE))\n\n\n\n\n\n\n\nOnce I filtered the data to only track & field medalists, I separated by sex and plotted their height and weight by event.\n\n\nLook at the code\n# initial exploration\nathletics %>% \n  filter(sex==\"F\") %>% \n  ggplot(aes(height, weight, color=event))+\n  geom_point()\n\n\n\n\n\nThere were too many events and the names were extremely messy so I chose only a few representative events and grouped them together by event type into either Distance, Mid-Distance, Sprints, Jumps, or Throws. I then plotted the female data again to see the new cleaned graph.\n\n\nLook at the code\n# there are so many events so lets choose a few events that represent some categories\n# distance: 10k, 5k\n# mid-distance: 800m, 1500m\n# sprints: 100m, 400m\n# jumps: long jump, triple jump\n# throws: shot put, discus, javelin\nathletics$event <- gsub(\"Athletics Women's \", \"\", athletics$event)\nathletics$event <- gsub(\"Athletics Men's \", \"\", athletics$event)\n\nathletics <- athletics %>% \n  filter(event == c(\"10,000 metres\", \"5,000 metres\", \"800 metres\",\"1,500 metres\", \"100 metres\", \"400 metres\", \"Long Jump\", \"Triple Jump\", \"Shot Put\", \"Discus Throw\", \"Javelin Throw\"))\n\nathletics %>% \n  ggplot(aes(height, weight, color=event))+\n  geom_point(alpha=0.5)\n\n\n\n\n\nLook at the code\n# this is still too much, let's group them\nathletics <- athletics %>% \n  mutate(event_type = case_when( \n  event %in% c(\"10,000 metres\", \"5,000 metres\") ~ \"Distance\",\n  event %in% c(\"800 metres\",\"1,500 metres\") ~ \"Mid-distance\",\n  event %in% c(\"100 metres\", \"400 metres\") ~ \"Sprints\",\n  event %in% c(\"Long Jump\", \"Triple Jump\", \"High Jump\") ~ \"Jumps\",\n  event %in% c(\"Shot Put\", \"Discus Throw\", \"Javelin Throw\") ~ \"Throws\",\n))\n\n# now it's time to subset by sex\nathletics_f <- athletics %>% \n  filter(sex==\"F\")\n\nathletics_m <- athletics %>% \n  filter(sex==\"M\")\n\n# plot female\nathletics_f %>% \n  ggplot(aes(height, weight, color=event_type))+\n  geom_point(alpha=0.5)\n\n\n\n\n\nThis is a much easier graphic to understand so I decided to beautify it.\n\n\nLook at the code\n# putting it together\n(( p1 <- athletics_f %>% \n  ggplot(aes(height, weight, color=event_type))+\n  geom_point(alpha=0.75)+\n  theme_minimal()+\n  scale_color_discrete_qualitative(\"Dark 3\")+\n  labs(title=\"Body Composition of Female \\nOlympic Medalists by Event\\n\", x=\"Height (cm)\", y=\"Weight (kg)\", color=\"Type of Track & Field Event\") ))\n\n\n\n\n\nWe see that female throwers generally tend to be larger (heavier and taller) while distance runners tend to be smaller (lighter and shorter) than the other athletes. Jumpers appear to either be rather tall (likely due to the high jumpers) or have a similar body composition to the sprinters. The short sprinters are in the middle of the pack, they do not appear to be skewed toward either end of either axis, while the mid-distance runners are slightly lighter and shorter than the short sprinters. The sprinters seem to have a similar body type to each other hovering around 170 cm and 60 kg.\n\n\nLook at the code\n# putting it together\n(( p2 <- athletics_m %>% \n  ggplot(aes(height, weight, color=event_type))+\n  geom_point(alpha=0.75)+\n  theme_minimal()+\n  scale_color_discrete_qualitative(\"Dark 3\")+\n  labs(title=\"Body Composition of Male \\nOlympic Medalists by Event\\n\", x=\"Height (cm)\", y=\"Weight (kg)\", color=\"Type of Track & Field Event\") ))\n\n\n\n\n\nAgain, we see similar trends among the male Olympic medalists to the female ones. Throwers dominate the upper right quadrant, meaning they tend to be taller and heavier than the other athletes. Like female distance runners, male distance runners tend to be lighter and shorter than other athletes. Jumpers and sprinters seem to have similar body types with mid-distance runners having a body composition between short sprinters and distance runners.\nI was surprised to see that throwers are so much taller than other athletes because I was assuming that jumpers would far and away be the tallest due to high jumpers. I think that throwers must be both tall and heavy in order to generate the massive amount of force that is required to become an Olympic medalist. The other thing that surprised me was also related to height. Distance runners tended to be shorter than other athletes which was not something that I had noticed before this. I think this has to do with height to weight ratio. Since I assume being light is advantageous for distance runners, being shorter and thus lighter would likely help them.\nOverall, I think that these data are showing similar trends to what I have personally observed about these events. I think that the data are showing that these events attract people of specific sizes, likely because there is some type of advantage to having that build."
  },
  {
    "objectID": "posts/rna-seq-data-wrangling.html",
    "href": "posts/rna-seq-data-wrangling.html",
    "title": "Development of a Pipeline for Wrangling RNA Seq Data",
    "section": "",
    "text": "I was a Biology major as an undergraduate but I always had a passion for coding. Thus, I was extremely lucky that I had the opportunity to work on both of my academic interests for my thesis. My thesis stemmed from an NSF funded project that my professor and advisor Dr. Rosa León-Zayas was working on in collaboration with Reed College. She was studying a group of bacteria that can eat the plastic that most water bottles are made from (polyethylene terephthalate or PET). If the enzymes involved in the degradation of this plastic are identified, it could help lay the foundation for developing a way to biodegrade plastics in waste treatment facilities, thus helping combat global pollution.\nIn order to identify the enzymes involved, they presented the bacteria with the plastic in a lab setting and sequenced the RNA of the bacteria before and during the exposure to plastic. RNA is a better indicator of what genes are actively expressed rather than what genes are present in an organism. Once they gathered this data, my job was to wrangle and analyze the RNA and translate them to their protein and enzymatic counterparts. Since RNA sequencing (RNA-seq) is a relatively new procedure, we had to develop a pipeline of the optimal software programs that produced the highest quality data. Through trial and error, my research partner, Grace Sheehan, and I identified that this software flow produced the most optimal data:\n\n\n\nFig. 1 - Flowchart of cleaning RNA-seq data and identifying enzymatic pathways. Created with Biorender.com.\n\n\nThe first step in our project was to clean the RNA-seq data to ensure its quality. We then matched the RNA sequences to each species of bacteria in our sample. Our aim was to determine which genes, and therefore enzymes, might be involved in the degradation of the plastic. To do this, we quantified the levels of gene expression before and after exposure to the plastic and normalized them to transcripts per million (TPM).\nDue to a data loss, we only had data from the plastic-exposed bacteria and not from the control group. However, we were able to overcome this challenge by identifying genes with abnormal levels of gene expression. The RNA sequencing data enabled us to determine what genes were actually being expressed, which helped us generate metabolic pathways for each of the bacteria in our consortium.\nMany of the genes and proteins were unknown in the initial database we used, so we looked for them in other databases. Among the “hypothetical proteins” we found, several enzymes were discovered that could be involved in the degradation of PET plastic. I then proposed a potential enzymatic pathway for the degradation of PET.\n\n\n\nFig. 2 - Potential enzymatic pathway that I identified. This was hypothetical and a more thorough enzymatic pathway has been identified in the publication. Created with Biorender.com.\n\n\nGrace Sheehan and I represented Willamette University and presented our work on this project at the Murdock College Science Research Conference in 2021. This work was later published in the International Journal of Molecular Sciences and can be seen here. The work we did here is very exciting for the future of the global environment. If we are able to identify and isolate enzymatic pathways that are involved in the degradation of plastics, we could create natural waste treatment facilities where bacteria are simply eating away our plastic waste. Even better, these bacteria could potentially be genetically engineered to produce their own plastic polymer from our plastic waste, effectively creating a biological recycling plant. I am grateful for the opportunity to work on this project and for the collaboration from Dr. Rosa León-Zayas, Grace Sheehan, and our colleagues at Reed College. I would also like to extend my gratitude to the NSF for funding and the Murdock Trust for giving me the chance to present our work at their conference."
  },
  {
    "objectID": "posts/currency-rates-database.html",
    "href": "posts/currency-rates-database.html",
    "title": "Construction of Database from Daily Currency Rates",
    "section": "",
    "text": "In order to explore my database creation abilities and practice relational database creation and web-scraping from APIs, I created a database of currency rates relative to USD that was scraped once daily from an API. To create a remote database, I needed to deploy a Docker container on a remote server on Railway.app. More on Docker containers here. I scraped the data using R code and set it to gather data once daily. Once scraped, my R code exported these R dataframes to tables in an SQL database.\n\n\n\n\nFig 1. - Entity relationship diagram for currency database. Primary keys and linking relationships are shown.\n\n\nI was curious to see if there was a correlation between GDP growth and currency rates so I scraped GDP data and created another table in my SQL database. I needed to link the currency rates with the GDP of the country so to do this I scraped country names and the currency codes associated with them. I also imported historical data from the time of the GDP growth measurement until the time of my first API scrape. In my SQL database, I created a View that updated with the average currency rate for each month based upon the new data added to the table. I was able to use these tables to perform an analysis on the fastest growing economies as of 2017.\n\n\n\n\nFig 2. - Exchange rates compared to USD for the fastest growing economies of 2017. The US dollar appears to be very strong relative to other currencies.\n\n\nThe results of my analysis appeared to be skewed by how strong the dollar has been performing recently since it seemed that most currencies performed worse relative to USD. I think that these data indicate just how strong the dollar is performing because the performance of the Euro is typically similar to that of the dollar and indicates a strengthening of the dollar in recent times.\nI had a really fun time scraping and creating the database for this project. I find the meticulous work involved in this quite fun and rewarding and I would love to work on more data engineering-type projects. Figuring out how to get everything in the ideal format and work the way I want is always a fun and exciting puzzle. If you have any fun ideas for projects, please do not hesitate to reach out to me here."
  },
  {
    "objectID": "posts/super-bowl-winners.html",
    "href": "posts/super-bowl-winners.html",
    "title": "Super Bowl Winners: Creating a Beautiful Table in R",
    "section": "",
    "text": "In celebration of the 2023 Super Bowl, I wanted explore the features of the gt R package by creating a table of all the teams that had won the Super Bowl since Super Bowl I.\n\n\nLook at the code\n# load packages and read in data\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(lubridate)\n\nsuperbowls <- readr::read_csv('~/Desktop/quarto-portfolio/posts/Super_Bowl.csv')\n \n# add logos for each team\nsuperbowls <- superbowls %>% \n  mutate(win_logo_url = \n  case_when(\n          Winner == \"Green Bay Packers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg\",\n          Winner == \"New York Jets\" ~ \"https://upload.wikimedia.org/wikipedia/en/6/6b/New_York_Jets_logo.svg\",\n          Winner == \"Kansas City Chiefs\" ~ \"https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg\",\n          Winner == \"Baltimore Colts\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif\",\n          Winner == \"Dallas Cowboys\" ~ \"https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg\",\n          Winner == \"Miami Dolphins\" ~ \"https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg\",\n          Winner == \"Pittsburgh Steelers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg\",\n          Winner == \"Oakland Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Winner == \"Los Angeles Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Winner == \"San Francisco 49ers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg\",\n          Winner == \"Washington Redskins\" ~ \"https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png\",\n          Winner == \"Chicago Bears\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg\",\n          Winner == \"New York Giants\" ~ \"https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg\",\n          Winner == \"Denver Broncos\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg\",\n          Winner == \"St. Louis Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg\",\n          Winner == \"Baltimore Ravens\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/16/Baltimore_Ravens_logo.svg\",\n          Winner == \"New England Patriots\" ~ \"https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg\",\n          Winner == \"Tampa Bay Buccaneers\" ~ \"https://upload.wikimedia.org/wikipedia/en/a/a2/Tampa_Bay_Buccaneers_logo.svg\",\n          Winner == \"Indianapolis Colts\" ~ \"https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg\",\n          Winner == \"New Orleans Saints\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/New_Orleans_Saints_logo.svg\",\n          Winner == \"Seattle Seahawks\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg\",\n          Winner == \"Philadelphia Eagles\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg\"\n          )\n       ) %>% \n  mutate(lose_logo_url = \n  case_when(\n          Loser == \"Green Bay Packers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg\",\n            Loser == \"Minnesota Vikings\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Minnesota_Vikings_logo.svg\",\n          Loser == \"Kansas City Chiefs\" ~ \"https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg\",\n          Loser == \"Baltimore Colts\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif\",\n          Loser == \"Dallas Cowboys\" ~ \"https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg\",\n          Loser == \"Miami Dolphins\" ~ \"https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg\",\n          Loser == \"Pittsburgh Steelers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg\",\n          Loser == \"Oakland Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Loser == \"Los Angeles Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8a/Los_Angeles_Rams_logo.svg\",\n          Loser == \"San Francisco 49ers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg\",\n          Loser == \"Washington Redskins\" ~ \"https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png\",\n          Loser == \"Chicago Bears\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg\",\n          Loser == \"New York Giants\" ~ \"https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg\",\n          Loser == \"Denver Broncos\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg\",\n          Loser == \"St. Louis Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg\",\n           Loser == \"Cincinnati Bengals\" ~ \"https://upload.wikimedia.org/wikipedia/commons/8/81/Cincinnati_Bengals_logo.svg\",\n          Loser == \"New England Patriots\" ~ \"https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg\",\n           Loser == \"Buffalo Bills\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/77/Buffalo_Bills_logo.svg\",\n          Loser == \"Indianapolis Colts\" ~ \"https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg\",\n           Loser == \"San Diego Chargers\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/72/NFL_Chargers_logo.svg\",\n          Loser == \"Seattle Seahawks\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg\",\n          Loser == \"Philadelphia Eagles\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg\",\n          Loser == \"Atlanta Falcons\" ~ \"https://upload.wikimedia.org/wikipedia/en/c/c5/Atlanta_Falcons_logo.svg\",\n          Loser == \"Tennessee Titans\" ~ \"https://upload.wikimedia.org/wikipedia/en/c/c1/Tennessee_Titans_logo.svg\",\n          Loser == \"Carolina Panthers\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1c/Carolina_Panthers_logo.svg\",\n          Loser == \"Arizona Cardinals\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/72/Arizona_Cardinals_logo.svg\"\n          )\n       )\n\n# Choosing a subset of columns to display basic information about the Super Bowl\nsuperbowls<-superbowls %>% \n  dplyr::select(\"SB\", \"Date\", \"win_logo_url\", \"Winner\", \"Winning Pts\", \"lose_logo_url\", \"Loser\", \"Losing Pts\", \"City\", \"State\")\n\n# convert to date format\nsuperbowls$Date <- as.Date(superbowls$Date, '%d-%b-%Y') %m+% years(2000) \n# convert to 4 digit year format\nsuperbowls$Date <- dplyr::if_else(superbowls$Date > '2023-01-01', superbowls$Date %m-% years(100), superbowls$Date)\n\n\n# create gt table  \nsuperbowls %>% \n  gt() %>% \n  # add title and subtitle\n  tab_header(\n    title = md(\"**Super Bowl Winners**\"),\n    subtitle = \"Super Bowl I-LII\"\n  ) %>%\n  # format date\n  fmt_date(\n    columns = Date,\n    date_style = 5\n  ) %>%\n  # add winning team label\n  tab_spanner(\n    label = md(\"**Winning Team**\"),\n    columns = c(win_logo_url, Winner, `Winning Pts`)\n  ) %>% \n  # add losing team label\n  tab_spanner(\n    label = \"Losing Team\",\n    columns = c(lose_logo_url, Loser, `Losing Pts`)\n  ) %>% \n  # add location label\n  tab_spanner(\n    label = \"Location\",\n    columns = c(City, State)\n  ) %>% \n  # add super bowl label\n  tab_spanner(\n    label = \"Super Bowl\",\n    columns = c(SB, Date)\n  ) %>% \n  # align the text to center\n  cols_align(\n    align = \"center\") %>% \n  # change names of columns\n  cols_label(\n    SB = \"Number\",\n    Winner = md(\"**Name**\"),\n    `Winning Pts` = md(\"**Points**\"),\n    Loser = \"Name\",\n    `Losing Pts` = \"Points\"\n  ) %>%\n  # convert urls to images\n  text_transform(\n    #Apply a function to a column\n    locations = cells_body(c(win_logo_url, lose_logo_url)),\n    fn = function(x) {\n      #Return an image of set dimensions\n      web_image(\n        url = x,\n        height = 12\n      )\n    }\n  ) %>%\n  #Hide column headers and reduce width\n  cols_width(c(win_logo_url, lose_logo_url) ~ px(30)) %>% \n  cols_label(win_logo_url = \"\") %>% \n  cols_label(lose_logo_url = \"\") %>%\n  # change colors of winning and losing teams\n  tab_style(\n    style = list(\n      cell_fill(\"darkseagreen1\"),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(win_logo_url, Winner, `Winning Pts`)\n    )\n  ) %>% \n  tab_style(\n    style = list(\n      cell_fill(\"#FFADAD\")\n    ),\n    locations = cells_body(\n      columns = c(lose_logo_url, Loser, `Losing Pts`)\n    )\n  ) %>% \n  # add reference footnote\n  tab_source_note(\n    source_note = html(\"Source: <b>Super Bowl Results, Officials, and MVPs</b>, dataset uploaded by user thedevastator to <a href ='https://www.kaggle.com/datasets/thedevastator/super-bowl-results-officials-and-mvps-1967-2020'>Kaggle.com</a>.\")\n  )\n\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Super Bowl Winners\n    \n    \n      Super Bowl I-LII\n    \n  \n  \n    \n      \n        Super Bowl\n      \n      \n        Winning Team\n      \n      \n        Losing Team\n      \n      \n        Location\n      \n    \n    \n      Number\n      Date\n      \n      Name\n      Points\n      \n      Name\n      Points\n      City\n      State\n    \n  \n  \n    I\nJanuary 15, 1967\n\nGreen Bay Packers\n35\n\nKansas City Chiefs\n10\nLos Angeles\nCalifornia\n    II\nJanuary 14, 1968\n\nGreen Bay Packers\n33\n\nOakland Raiders\n14\nMiami\nFlorida\n    III\nJanuary 12, 1969\n\nNew York Jets\n16\n\nBaltimore Colts\n7\nMiami\nFlorida\n    IV\nJanuary 11, 1970\n\nKansas City Chiefs\n23\n\nMinnesota Vikings\n7\nNew Orleans\nLouisiana\n    V\nJanuary 17, 1971\n\nBaltimore Colts\n16\n\nDallas Cowboys\n13\nMiami\nFlorida\n    VI\nJanuary 16, 1972\n\nDallas Cowboys\n24\n\nMiami Dolphins\n3\nNew Orleans\nLouisiana\n    VII\nJanuary 14, 1973\n\nMiami Dolphins\n14\n\nWashington Redskins\n7\nLos Angeles\nCalifornia\n    VIII\nJanuary 13, 1974\n\nMiami Dolphins\n24\n\nMinnesota Vikings\n7\nHouston\nTexas\n    IX\nJanuary 12, 1975\n\nPittsburgh Steelers\n16\n\nMinnesota Vikings\n6\nNew Orleans\nLouisiana\n    X\nJanuary 18, 1976\n\nPittsburgh Steelers\n21\n\nDallas Cowboys\n17\nMiami\nFlorida\n    XI\nJanuary 9, 1977\n\nOakland Raiders\n32\n\nMinnesota Vikings\n14\nPasadena\nCalifornia\n    XII\nJanuary 15, 1978\n\nDallas Cowboys\n27\n\nDenver Broncos\n10\nNew Orleans\nLouisiana\n    XIII\nJanuary 21, 1979\n\nPittsburgh Steelers\n35\n\nDallas Cowboys\n31\nMiami\nFlorida\n    XIV\nJanuary 20, 1980\n\nPittsburgh Steelers\n31\n\nLos Angeles Rams\n19\nPasadena\nCalifornia\n    XV\nJanuary 25, 1981\n\nOakland Raiders\n27\n\nPhiladelphia Eagles\n10\nNew Orleans\nLouisiana\n    XVI\nJanuary 24, 1982\n\nSan Francisco 49ers\n26\n\nCincinnati Bengals\n21\nPontiac\nMichigan\n    XVII\nJanuary 30, 1983\n\nWashington Redskins\n27\n\nMiami Dolphins\n17\nPasadena\nCalifornia\n    XVIII\nJanuary 22, 1984\n\nLos Angeles Raiders\n38\n\nWashington Redskins\n9\nTampa\nFlorida\n    XIX\nJanuary 20, 1985\n\nSan Francisco 49ers\n38\n\nMiami Dolphins\n16\nPalo Alto\nCalifornia\n    XX\nJanuary 26, 1986\n\nChicago Bears\n46\n\nNew England Patriots\n10\nNew Orleans\nLouisiana\n    XXI\nJanuary 25, 1987\n\nNew York Giants\n39\n\nDenver Broncos\n20\nPasadena\nCalifornia\n    XXII\nJanuary 31, 1988\n\nWashington Redskins\n42\n\nDenver Broncos\n10\nSan Diego\nCalifornia\n    XXIII\nJanuary 22, 1989\n\nSan Francisco 49ers\n20\n\nCincinnati Bengals\n16\nMiami Gardens\nFlorida\n    XXIV\nJanuary 28, 1990\n\nSan Francisco 49ers\n55\n\nDenver Broncos\n10\nNew Orleans\nLouisiana\n    XXV\nJanuary 27, 1991\n\nNew York Giants\n20\n\nBuffalo Bills\n19\nTampa\nFlorida\n    XXVI\nJanuary 26, 1992\n\nWashington Redskins\n37\n\nBuffalo Bills\n24\nMinneapolis\nMinnesota\n    XXVII\nJanuary 31, 1993\n\nDallas Cowboys\n52\n\nBuffalo Bills\n17\nPasadena\nCalifornia\n    XXVIII\nJanuary 30, 1994\n\nDallas Cowboys\n30\n\nBuffalo Bills\n13\nAtlanta\nGeorgia\n    XXIX\nJanuary 29, 1995\n\nSan Francisco 49ers\n49\n\nSan Diego Chargers\n26\nMiami Gardens\nFlorida\n    XXX\nJanuary 28, 1996\n\nDallas Cowboys\n27\n\nPittsburgh Steelers\n17\nTempe\nArizona\n    XXXI\nJanuary 26, 1997\n\nGreen Bay Packers\n35\n\nNew England Patriots\n21\nNew Orleans\nLouisiana\n    XXXII\nJanuary 25, 1998\n\nDenver Broncos\n31\n\nGreen Bay Packers\n24\nSan Diego\nCalifornia\n    XXXIII\nJanuary 31, 1999\n\nDenver Broncos\n34\n\nAtlanta Falcons\n19\nMiami Gardens\nFlorida\n    XXXIV\nJanuary 30, 2000\n\nSt. Louis Rams\n23\n\nTennessee Titans\n16\nAtlanta\nGeorgia\n    XXXV\nJanuary 28, 2001\n\nBaltimore Ravens\n34\n\nNew York Giants\n7\nTampa\nFlorida\n    XXXVI\nFebruary 3, 2002\n\nNew England Patriots\n20\n\nSt. Louis Rams\n17\nNew Orleans\nLouisiana\n    XXXVII\nJanuary 26, 2003\n\nTampa Bay Buccaneers\n48\n\nOakland Raiders\n21\nSan Diego\nCalifornia\n    XXXVIII\nFebruary 1, 2004\n\nNew England Patriots\n32\n\nCarolina Panthers\n29\nHouston\nTexas\n    XXXIX\nFebruary 6, 2005\n\nNew England Patriots\n24\n\nPhiladelphia Eagles\n21\nJacksonville\nFlorida\n    XL\nFebruary 5, 2006\n\nPittsburgh Steelers\n21\n\nSeattle Seahawks\n10\nDetroit\nMichigan\n    XLI\nFebruary 4, 2007\n\nIndianapolis Colts\n29\n\nChicago Bears\n17\nMiami Gardens\nFlorida\n    XLII\nFebruary 3, 2008\n\nNew York Giants\n17\n\nNew England Patriots\n14\nGlendale\nArizona\n    XLIII\nFebruary 1, 2009\n\nPittsburgh Steelers\n27\n\nArizona Cardinals\n23\nTampa\nFlorida\n    XLIV\nFebruary 7, 2010\n\nNew Orleans Saints\n31\n\nIndianapolis Colts\n17\nMiami Gardens\nFlorida\n    XLV\nFebruary 6, 2011\n\nGreen Bay Packers\n31\n\nPittsburgh Steelers\n25\nArlington\nTexas\n    XLVI\nFebruary 5, 2012\n\nNew York Giants\n21\n\nNew England Patriots\n17\nIndianapolis\nIndiana\n    XLVII\nFebruary 3, 2013\n\nBaltimore Ravens\n34\n\nSan Francisco 49ers\n31\nNew Orleans\nLouisiana\n    XLVIII\nFebruary 2, 2014\n\nSeattle Seahawks\n43\n\nDenver Broncos\n8\nEast Rutherford\nNew Jersey\n    XLIX\nFebruary 1, 2015\n\nNew England Patriots\n28\n\nSeattle Seahawks\n24\nGlendale\nArizona\n    L\nFebruary 7, 2016\n\nDenver Broncos\n24\n\nCarolina Panthers\n10\nSanta Clara\nCalifornia\n    LI\nFebruary 5, 2017\n\nNew England Patriots\n34\n\nAtlanta Falcons\n28\nHouston\nTexas\n    LII\nFebruary 4, 2018\n\nPhiladelphia Eagles\n41\n\nNew England Patriots\n33\nMinneapolis\nMinnesota\n  \n  \n    \n      Source: Super Bowl Results, Officials, and MVPs, dataset uploaded by user thedevastator to Kaggle.com.\n    \n  \n  \n\n\n\n\nWe can see a sad fact from this table: my team the Cincinnati Bengals have never won! 😢\nHas your team ever won?"
  },
  {
    "objectID": "posts/sunshine-interactive-visuals.html",
    "href": "posts/sunshine-interactive-visuals.html",
    "title": "How Sunny is Your Hometown?",
    "section": "",
    "text": "In this post, I am exploring creating interactive graphics using the R packages ggiraph and plotly. I love being outside in the sun, so I thought it would be fun to play around with a dataset on sunshine in the United States. You can find the original dataset on Kaggle.com.\nIn the first graphic, I created an interactive line plot with plotly of all the cities that I have personal ties to. You can double-click on the city on the legend to isolate its data. In the second graphic, I created an interactive bar chart with ggiraph that allows you to compare cities with the same levels of sunshine.\nWhat stood out to me the most was the weird dip in the levels of sun during May and June compared to April and July in Los Angeles. I am curious to find out more about what happened there and if this is a common trend. I had a fun time playing with these packages and the sunshine dataset. Can you find a new dream vacation spot from the second graphic?\n\n\nLook at the code\n# load packages and read in data\nlibrary(tidyverse)\nlibrary(ggiraph)\nlibrary(plotly)\nlibrary(ggpubr)\n# library(widgetframe)\nlibrary(patchwork)\n\nsunshine <- readr::read_csv('~/Desktop/quarto-portfolio/posts/avg_sunshine.csv')\n\n# get cities into the right format\nsunshine$CITY <- str_to_title(sunshine$CITY)\nsunshine$CITY <- str_replace(sunshine$CITY, \",\", \", \")\nsunshine$CITY <- gsub(\"(\\\\w$)\", \"\\\\U\\\\1\", sunshine$CITY, perl = TRUE)\n\n# get rid of duplicates\nsunshine <- sunshine %>% \n  filter(CITY != \"CitY\")\n\nsunshine <- sunshine[!duplicated(sunshine$CITY), ]\n\n# get data into the right format\nsunshine <- pivot_longer(sunshine, JAN:DEC, names_to = \"month\", values_to = \"temp\")\n\nsunshine <- sunshine[, -4]\nsunshine$ANN<-as.numeric(sunshine$ANN)\nsunshine$temp<-as.numeric(sunshine$temp)\nsunshine$month<-str_to_title(sunshine$month)\nsunshine$month<-as.factor(sunshine$month)\nsunshine$perc_temp<-sunshine$temp/100\n\n\nsun_cities <- sunshine %>% \n  filter(CITY %in% c(\"Portland, OR\", \"Los Angeles, CA\", \"Honolulu, HI\", \"Chicago, IL\", \"Boston, MA\"))\n\nsun_cities$month <- factor(sun_cities$month, levels=c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"))\n\n\n\n# basic line plot for ggiraph\ngg_sunshine <- sun_cities %>%  \n  ggplot(aes(x = month, y=temp, text = paste0(\"Percent possible sunshine in\\n\",CITY, \": \", temp, \"% in \", month))) +\n  geom_line(aes(x = month, y = temp, color = CITY, group = CITY), alpha=0.8)+\n  labs(x=\"Month\", y=\"Average percent of possible sunshine\", color = \"City\", caption = \"Data from Kaggle.com: uploaded by user thedevastator\", title = \"How sunny are the cities that \\nare important to me?\", subtitle = \"Measured by time of sunshine reaching earth from sunrise to sunset\")+\n  theme_minimal()+\n  theme(\n        plot.title = element_text(vjust = 2),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  scale_color_manual(values=c(\"black\",\"#0454a4\", \"#5688c1\",\"#7ca4d4\", \"#b8cee6\"))\n\nggplotly(gg_sunshine, tooltip = 'text')\n\n\n\n\n\n\nLook at the code\n# working on the ggiraph\n\ntooltip_css <- \"background-color:#7ca4d4;color:white;padding:5px;border-radius:3px;\"\n\navg_sun <- sunshine %>% group_by(CITY, ANN) %>% summarize() %>% na.omit()\n\n# Creating plots\navg_sun$tooltip <- c(paste0(avg_sun$CITY,\": \", avg_sun$ANN, \"%\"))\n\nsun1 <- avg_sun[1:38,] %>% \n  ggplot()+\n  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,\n                           tooltip = tooltip,\n                      data_id = ANN), fill=\"#0454a4\")+\n  coord_flip()+\n    labs(x=\"\", y=\"Average annual sunshine\")+\n  theme_minimal()+\n  theme(axis.text.x = element_text(vjust = 2))+\n  lims(y=c(0,1))+\n  scale_y_continuous(labels = scales::percent)+\n  scale_x_discrete(labels=NULL)\n\n\nsun2<-avg_sun[39:76,] %>% \n  ggplot()+\n  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,\n                           tooltip = tooltip,\n                      data_id = ANN), fill=\"#0454a4\")+\n  coord_flip()+\n    labs(x=\"\", y=\"Average annual sunshine\")+\n  theme_minimal()+\n  theme(axis.text.x = element_text(vjust = 2))+\n  lims(y=c(0,1))+\n  scale_y_continuous(labels = scales::percent)+\n  scale_x_discrete(labels=NULL)\n\nsun3<-avg_sun[77:115,] %>% \n  ggplot()+\n  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,\n                           tooltip = tooltip,\n                      data_id = ANN), fill=\"#0454a4\")+\n  coord_flip()+\n    labs(x=\"\", y=\"Average annual sunshine\")+\n  theme_minimal()+\n  theme(axis.text.x = element_text(vjust = 2))+\n  lims(y=c(0,1))+\n  scale_y_continuous(labels = scales::percent)+\n  scale_x_discrete(labels=NULL)\n\nsun4<-avg_sun[116:153,] %>% \n  ggplot()+\n  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,\n                           tooltip = tooltip,\n                      data_id = ANN), fill=\"#0454a4\")+\n  coord_flip()+\n    labs(x=\"\", y=\"Average annual sunshine\")+\n  theme_minimal()+\n  theme(axis.text.x = element_text(vjust = 2))+\n  lims(y=c(0,1))+\n  scale_y_continuous(labels = scales::percent)+\n  scale_x_discrete(labels=NULL)\n\n # sun_plots <- ggarrange(\n #  sun1, sun2, sun3, sun4,\n #  common.legend = TRUE,\n #  legend = \"right\"\n #  )\n p<-ggarrange(sun1, sun2, sun3, sun4, ncol=2, nrow=2, labels=c(\"A\",\"B\",\"C\",\"D\"))\ngirafe(\n  code = print(p + plot_annotation(title=\"How sunny is your hometown?\", subtitle = \"Measured by time of sun shine reaching earth from sunrise to sunset\", caption = \"A: Abilene TX - Des Moines, IA\\nB: Detroit, MI - Las Vegas, NV\\nC: Lihue, HI - Providence, RI\\nD: Pueblo, CO - Yap- W Caroline Is., PC\\nData from Kaggle.com: uploaded by user thedevastator\", theme = theme(plot.caption.position = \"plot\", plot.caption = element_text(hjust = 0)))),\n  height_svg = 9,\n  width_svg = NULL,\n  options = list(\n    opts_tooltip(css = tooltip_css, opacity = 1),\n    opts_sizing(width = .7),\n    opts_hover(css = \"fill:#0454a4;stroke-width:2;\"),\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_selection(\n      type = \"single\", \n      only_shiny = FALSE,\n      css = \"fill:#0454a4\"),\n    opts_zoom(max=4)\n  )\n)"
  },
  {
    "objectID": "posts/super-bowl-winners copy.html",
    "href": "posts/super-bowl-winners copy.html",
    "title": "Super Bowl Winners: Creating a Beautiful Table in R",
    "section": "",
    "text": "In celebration of the 2023 Super Bowl, I wanted explore the features of the gt R package by creating a table of all the teams that had won the Super Bowl since Super Bowl I.\n\n\nLook at the code\n# load packages and read in data\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(lubridate)\n\nsuperbowls <- readr::read_csv('~/Desktop/quarto-portfolio/posts/Super_Bowl.csv')\n \n# add logos for each team\nsuperbowls <- superbowls %>% \n  mutate(win_logo_url = \n  case_when(\n          Winner == \"Green Bay Packers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg\",\n          Winner == \"New York Jets\" ~ \"https://upload.wikimedia.org/wikipedia/en/6/6b/New_York_Jets_logo.svg\",\n          Winner == \"Kansas City Chiefs\" ~ \"https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg\",\n          Winner == \"Baltimore Colts\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif\",\n          Winner == \"Dallas Cowboys\" ~ \"https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg\",\n          Winner == \"Miami Dolphins\" ~ \"https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg\",\n          Winner == \"Pittsburgh Steelers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg\",\n          Winner == \"Oakland Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Winner == \"Los Angeles Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Winner == \"San Francisco 49ers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg\",\n          Winner == \"Washington Redskins\" ~ \"https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png\",\n          Winner == \"Chicago Bears\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg\",\n          Winner == \"New York Giants\" ~ \"https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg\",\n          Winner == \"Denver Broncos\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg\",\n          Winner == \"St. Louis Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg\",\n          Winner == \"Baltimore Ravens\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/16/Baltimore_Ravens_logo.svg\",\n          Winner == \"New England Patriots\" ~ \"https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg\",\n          Winner == \"Tampa Bay Buccaneers\" ~ \"https://upload.wikimedia.org/wikipedia/en/a/a2/Tampa_Bay_Buccaneers_logo.svg\",\n          Winner == \"Indianapolis Colts\" ~ \"https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg\",\n          Winner == \"New Orleans Saints\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/New_Orleans_Saints_logo.svg\",\n          Winner == \"Seattle Seahawks\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg\",\n          Winner == \"Philadelphia Eagles\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg\"\n          )\n       ) %>% \n  mutate(lose_logo_url = \n  case_when(\n          Loser == \"Green Bay Packers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg\",\n            Loser == \"Minnesota Vikings\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Minnesota_Vikings_logo.svg\",\n          Loser == \"Kansas City Chiefs\" ~ \"https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg\",\n          Loser == \"Baltimore Colts\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif\",\n          Loser == \"Dallas Cowboys\" ~ \"https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg\",\n          Loser == \"Miami Dolphins\" ~ \"https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg\",\n          Loser == \"Pittsburgh Steelers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg\",\n          Loser == \"Oakland Raiders\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg\",\n          Loser == \"Los Angeles Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8a/Los_Angeles_Rams_logo.svg\",\n          Loser == \"San Francisco 49ers\" ~ \"https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg\",\n          Loser == \"Washington Redskins\" ~ \"https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png\",\n          Loser == \"Chicago Bears\" ~ \"https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg\",\n          Loser == \"New York Giants\" ~ \"https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg\",\n          Loser == \"Denver Broncos\" ~ \"https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg\",\n          Loser == \"St. Louis Rams\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg\",\n           Loser == \"Cincinnati Bengals\" ~ \"https://upload.wikimedia.org/wikipedia/commons/8/81/Cincinnati_Bengals_logo.svg\",\n          Loser == \"New England Patriots\" ~ \"https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg\",\n           Loser == \"Buffalo Bills\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/77/Buffalo_Bills_logo.svg\",\n          Loser == \"Indianapolis Colts\" ~ \"https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg\",\n           Loser == \"San Diego Chargers\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/72/NFL_Chargers_logo.svg\",\n          Loser == \"Seattle Seahawks\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg\",\n          Loser == \"Philadelphia Eagles\" ~ \"https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg\",\n          Loser == \"Atlanta Falcons\" ~ \"https://upload.wikimedia.org/wikipedia/en/c/c5/Atlanta_Falcons_logo.svg\",\n          Loser == \"Tennessee Titans\" ~ \"https://upload.wikimedia.org/wikipedia/en/c/c1/Tennessee_Titans_logo.svg\",\n          Loser == \"Carolina Panthers\" ~ \"https://upload.wikimedia.org/wikipedia/en/1/1c/Carolina_Panthers_logo.svg\",\n          Loser == \"Arizona Cardinals\" ~ \"https://upload.wikimedia.org/wikipedia/en/7/72/Arizona_Cardinals_logo.svg\"\n          )\n       )\n\n# Choosing a subset of columns to display basic information about the Super Bowl\nsuperbowls<-superbowls %>% \n  dplyr::select(\"SB\", \"Date\", \"win_logo_url\", \"Winner\", \"Winning Pts\", \"lose_logo_url\", \"Loser\", \"Losing Pts\", \"City\", \"State\")\n\n# convert to date format\nsuperbowls$Date <- as.Date(superbowls$Date, '%d-%b-%Y') %m+% years(2000) \n# convert to 4 digit year format\nsuperbowls$Date <- dplyr::if_else(superbowls$Date > '2023-01-01', superbowls$Date %m-% years(100), superbowls$Date)\n\n\n# create gt table  \nsuperbowls %>% \n  gt() %>% \n  # add title and subtitle\n  tab_header(\n    title = md(\"**Super Bowl Winners**\"),\n    subtitle = \"Super Bowl I-LII\"\n  ) %>%\n  # format date\n  fmt_date(\n    columns = Date,\n    date_style = 5\n  ) %>%\n  # add winning team label\n  tab_spanner(\n    label = md(\"**Winning Team**\"),\n    columns = c(win_logo_url, Winner, `Winning Pts`)\n  ) %>% \n  # add losing team label\n  tab_spanner(\n    label = \"Losing Team\",\n    columns = c(lose_logo_url, Loser, `Losing Pts`)\n  ) %>% \n  # add location label\n  tab_spanner(\n    label = \"Location\",\n    columns = c(City, State)\n  ) %>% \n  # add super bowl label\n  tab_spanner(\n    label = \"Super Bowl\",\n    columns = c(SB, Date)\n  ) %>% \n  # align the text to center\n  cols_align(\n    align = \"center\") %>% \n  # change names of columns\n  cols_label(\n    SB = \"Number\",\n    Winner = md(\"**Name**\"),\n    `Winning Pts` = md(\"**Points**\"),\n    Loser = \"Name\",\n    `Losing Pts` = \"Points\"\n  ) %>%\n  # convert urls to images\n  text_transform(\n    #Apply a function to a column\n    locations = cells_body(c(win_logo_url, lose_logo_url)),\n    fn = function(x) {\n      #Return an image of set dimensions\n      web_image(\n        url = x,\n        height = 12\n      )\n    }\n  ) %>%\n  #Hide column headers and reduce width\n  cols_width(c(win_logo_url, lose_logo_url) ~ px(30)) %>% \n  cols_label(win_logo_url = \"\") %>% \n  cols_label(lose_logo_url = \"\") %>%\n  # change colors of winning and losing teams\n  tab_style(\n    style = list(\n      cell_fill(\"darkseagreen1\"),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(win_logo_url, Winner, `Winning Pts`)\n    )\n  ) %>% \n  tab_style(\n    style = list(\n      cell_fill(\"#FFADAD\")\n    ),\n    locations = cells_body(\n      columns = c(lose_logo_url, Loser, `Losing Pts`)\n    )\n  ) %>% \n  # add reference footnote\n  tab_source_note(\n    source_note = html(\"Source: <b>Super Bowl Results, Officials, and MVPs</b>, dataset uploaded by user thedevastator to <a href ='https://www.kaggle.com/datasets/thedevastator/super-bowl-results-officials-and-mvps-1967-2020'>Kaggle.com</a>.\")\n  )\n\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Super Bowl Winners\n    \n    \n      Super Bowl I-LII\n    \n  \n  \n    \n      \n        Super Bowl\n      \n      \n        Winning Team\n      \n      \n        Losing Team\n      \n      \n        Location\n      \n    \n    \n      Number\n      Date\n      \n      Name\n      Points\n      \n      Name\n      Points\n      City\n      State\n    \n  \n  \n    I\nJanuary 15, 1967\n\nGreen Bay Packers\n35\n\nKansas City Chiefs\n10\nLos Angeles\nCalifornia\n    II\nJanuary 14, 1968\n\nGreen Bay Packers\n33\n\nOakland Raiders\n14\nMiami\nFlorida\n    III\nJanuary 12, 1969\n\nNew York Jets\n16\n\nBaltimore Colts\n7\nMiami\nFlorida\n    IV\nJanuary 11, 1970\n\nKansas City Chiefs\n23\n\nMinnesota Vikings\n7\nNew Orleans\nLouisiana\n    V\nJanuary 17, 1971\n\nBaltimore Colts\n16\n\nDallas Cowboys\n13\nMiami\nFlorida\n    VI\nJanuary 16, 1972\n\nDallas Cowboys\n24\n\nMiami Dolphins\n3\nNew Orleans\nLouisiana\n    VII\nJanuary 14, 1973\n\nMiami Dolphins\n14\n\nWashington Redskins\n7\nLos Angeles\nCalifornia\n    VIII\nJanuary 13, 1974\n\nMiami Dolphins\n24\n\nMinnesota Vikings\n7\nHouston\nTexas\n    IX\nJanuary 12, 1975\n\nPittsburgh Steelers\n16\n\nMinnesota Vikings\n6\nNew Orleans\nLouisiana\n    X\nJanuary 18, 1976\n\nPittsburgh Steelers\n21\n\nDallas Cowboys\n17\nMiami\nFlorida\n    XI\nJanuary 9, 1977\n\nOakland Raiders\n32\n\nMinnesota Vikings\n14\nPasadena\nCalifornia\n    XII\nJanuary 15, 1978\n\nDallas Cowboys\n27\n\nDenver Broncos\n10\nNew Orleans\nLouisiana\n    XIII\nJanuary 21, 1979\n\nPittsburgh Steelers\n35\n\nDallas Cowboys\n31\nMiami\nFlorida\n    XIV\nJanuary 20, 1980\n\nPittsburgh Steelers\n31\n\nLos Angeles Rams\n19\nPasadena\nCalifornia\n    XV\nJanuary 25, 1981\n\nOakland Raiders\n27\n\nPhiladelphia Eagles\n10\nNew Orleans\nLouisiana\n    XVI\nJanuary 24, 1982\n\nSan Francisco 49ers\n26\n\nCincinnati Bengals\n21\nPontiac\nMichigan\n    XVII\nJanuary 30, 1983\n\nWashington Redskins\n27\n\nMiami Dolphins\n17\nPasadena\nCalifornia\n    XVIII\nJanuary 22, 1984\n\nLos Angeles Raiders\n38\n\nWashington Redskins\n9\nTampa\nFlorida\n    XIX\nJanuary 20, 1985\n\nSan Francisco 49ers\n38\n\nMiami Dolphins\n16\nPalo Alto\nCalifornia\n    XX\nJanuary 26, 1986\n\nChicago Bears\n46\n\nNew England Patriots\n10\nNew Orleans\nLouisiana\n    XXI\nJanuary 25, 1987\n\nNew York Giants\n39\n\nDenver Broncos\n20\nPasadena\nCalifornia\n    XXII\nJanuary 31, 1988\n\nWashington Redskins\n42\n\nDenver Broncos\n10\nSan Diego\nCalifornia\n    XXIII\nJanuary 22, 1989\n\nSan Francisco 49ers\n20\n\nCincinnati Bengals\n16\nMiami Gardens\nFlorida\n    XXIV\nJanuary 28, 1990\n\nSan Francisco 49ers\n55\n\nDenver Broncos\n10\nNew Orleans\nLouisiana\n    XXV\nJanuary 27, 1991\n\nNew York Giants\n20\n\nBuffalo Bills\n19\nTampa\nFlorida\n    XXVI\nJanuary 26, 1992\n\nWashington Redskins\n37\n\nBuffalo Bills\n24\nMinneapolis\nMinnesota\n    XXVII\nJanuary 31, 1993\n\nDallas Cowboys\n52\n\nBuffalo Bills\n17\nPasadena\nCalifornia\n    XXVIII\nJanuary 30, 1994\n\nDallas Cowboys\n30\n\nBuffalo Bills\n13\nAtlanta\nGeorgia\n    XXIX\nJanuary 29, 1995\n\nSan Francisco 49ers\n49\n\nSan Diego Chargers\n26\nMiami Gardens\nFlorida\n    XXX\nJanuary 28, 1996\n\nDallas Cowboys\n27\n\nPittsburgh Steelers\n17\nTempe\nArizona\n    XXXI\nJanuary 26, 1997\n\nGreen Bay Packers\n35\n\nNew England Patriots\n21\nNew Orleans\nLouisiana\n    XXXII\nJanuary 25, 1998\n\nDenver Broncos\n31\n\nGreen Bay Packers\n24\nSan Diego\nCalifornia\n    XXXIII\nJanuary 31, 1999\n\nDenver Broncos\n34\n\nAtlanta Falcons\n19\nMiami Gardens\nFlorida\n    XXXIV\nJanuary 30, 2000\n\nSt. Louis Rams\n23\n\nTennessee Titans\n16\nAtlanta\nGeorgia\n    XXXV\nJanuary 28, 2001\n\nBaltimore Ravens\n34\n\nNew York Giants\n7\nTampa\nFlorida\n    XXXVI\nFebruary 3, 2002\n\nNew England Patriots\n20\n\nSt. Louis Rams\n17\nNew Orleans\nLouisiana\n    XXXVII\nJanuary 26, 2003\n\nTampa Bay Buccaneers\n48\n\nOakland Raiders\n21\nSan Diego\nCalifornia\n    XXXVIII\nFebruary 1, 2004\n\nNew England Patriots\n32\n\nCarolina Panthers\n29\nHouston\nTexas\n    XXXIX\nFebruary 6, 2005\n\nNew England Patriots\n24\n\nPhiladelphia Eagles\n21\nJacksonville\nFlorida\n    XL\nFebruary 5, 2006\n\nPittsburgh Steelers\n21\n\nSeattle Seahawks\n10\nDetroit\nMichigan\n    XLI\nFebruary 4, 2007\n\nIndianapolis Colts\n29\n\nChicago Bears\n17\nMiami Gardens\nFlorida\n    XLII\nFebruary 3, 2008\n\nNew York Giants\n17\n\nNew England Patriots\n14\nGlendale\nArizona\n    XLIII\nFebruary 1, 2009\n\nPittsburgh Steelers\n27\n\nArizona Cardinals\n23\nTampa\nFlorida\n    XLIV\nFebruary 7, 2010\n\nNew Orleans Saints\n31\n\nIndianapolis Colts\n17\nMiami Gardens\nFlorida\n    XLV\nFebruary 6, 2011\n\nGreen Bay Packers\n31\n\nPittsburgh Steelers\n25\nArlington\nTexas\n    XLVI\nFebruary 5, 2012\n\nNew York Giants\n21\n\nNew England Patriots\n17\nIndianapolis\nIndiana\n    XLVII\nFebruary 3, 2013\n\nBaltimore Ravens\n34\n\nSan Francisco 49ers\n31\nNew Orleans\nLouisiana\n    XLVIII\nFebruary 2, 2014\n\nSeattle Seahawks\n43\n\nDenver Broncos\n8\nEast Rutherford\nNew Jersey\n    XLIX\nFebruary 1, 2015\n\nNew England Patriots\n28\n\nSeattle Seahawks\n24\nGlendale\nArizona\n    L\nFebruary 7, 2016\n\nDenver Broncos\n24\n\nCarolina Panthers\n10\nSanta Clara\nCalifornia\n    LI\nFebruary 5, 2017\n\nNew England Patriots\n34\n\nAtlanta Falcons\n28\nHouston\nTexas\n    LII\nFebruary 4, 2018\n\nPhiladelphia Eagles\n41\n\nNew England Patriots\n33\nMinneapolis\nMinnesota\n  \n  \n    \n      Source: Super Bowl Results, Officials, and MVPs, dataset uploaded by user thedevastator to Kaggle.com.\n    \n  \n  \n\n\n\n\nWe can see a sad fact from this table: my team the Cincinnati Bengals have never won! 😢\nHas your team ever won?"
  }
]